import{_ as s,c as n,o as a,a2 as p}from"./chunks/framework.U6HXpukZ.js";const k=JSON.parse('{"title":"使用Keepalived + Haproxy作为控制平面负载入口","description":"","frontmatter":{},"headers":[],"relativePath":"ha-keepalived-haproxy.md","filePath":"ha-keepalived-haproxy.md"}'),e={name:"ha-keepalived-haproxy.md"},l=p(`<h1 id="使用keepalived-haproxy作为控制平面负载入口" tabindex="-1">使用Keepalived + Haproxy作为控制平面负载入口 <a class="header-anchor" href="#使用keepalived-haproxy作为控制平面负载入口" aria-label="Permalink to &quot;使用Keepalived + Haproxy作为控制平面负载入口&quot;">​</a></h1><h3 id="安装keepalived" tabindex="-1">安装keepalived <a class="header-anchor" href="#安装keepalived" aria-label="Permalink to &quot;安装keepalived&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>yum -y install keepalived</span></span>
<span class="line"><span>cat &gt; /etc/keepalived/keepalived.conf &lt;&lt; EOF</span></span>
<span class="line"><span>! Configuration File for keepalived</span></span>
<span class="line"><span></span></span>
<span class="line"><span>global_defs {</span></span>
<span class="line"><span>   router_id LVS_DEVEL</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>vrrp_script chk_haproxy {</span></span>
<span class="line"><span>  script &quot;killall -0 haproxy&quot;</span></span>
<span class="line"><span>  interval 2</span></span>
<span class="line"><span>  weight -3</span></span>
<span class="line"><span>  fall 1</span></span>
<span class="line"><span>  rise 2</span></span>
<span class="line"><span>  timeout 2</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>vrrp_instance VI_1 {</span></span>
<span class="line"><span>    state MASTER  # 其他节点为BACKUP</span></span>
<span class="line"><span>    interface ens5f0  # 网卡</span></span>
<span class="line"><span>    virtual_router_id 60 # id与其他keepalived节点一致</span></span>
<span class="line"><span>    priority 100   # 初始化权重，一致即可，不影响</span></span>
<span class="line"><span>    advert_int 1</span></span>
<span class="line"><span>    authentication {</span></span>
<span class="line"><span>        auth_type PASS</span></span>
<span class="line"><span>        auth_pass 1111  # 密码与其他keepalived节点一致</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    unicast_src_ip 172.25.2.4 # 本机ip</span></span>
<span class="line"><span>    unicast_peer {</span></span>
<span class="line"><span>        172.25.2.5  # 其他keepalived节点ip</span></span>
<span class="line"><span>        172.25.2.6</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    virtual_ipaddress {</span></span>
<span class="line"><span>        172.25.2.50     # vip</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    track_script {</span></span>
<span class="line"><span>        chk_haproxy</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>EOF</span></span></code></pre></div><blockquote><p>注释的地方，按需求修改</p><p>我这里的配置文件只需要修改如下</p><p><code>state</code>MASTER改为BACKUP</p><p><code>unicast_src_ip</code>修改为本机IP</p><p><code>unicast_peer</code>修改为其他keepalived节点（其他master节点）</p><p>其他位置不用动。</p></blockquote><h3 id="安装haproxy" tabindex="-1">安装HAProxy <a class="header-anchor" href="#安装haproxy" aria-label="Permalink to &quot;安装HAProxy&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>yum -y install haproxy</span></span>
<span class="line"><span>cat &gt; /etc/haproxy/haproxy.cfg &lt;&lt;EOF</span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span># Example configuration for a possible web application.  See the</span></span>
<span class="line"><span># full configuration options online.</span></span>
<span class="line"><span>#</span></span>
<span class="line"><span>#   https://www.haproxy.org/download/1.8/doc/configuration.txt</span></span>
<span class="line"><span>#</span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span># Global settings</span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span>global</span></span>
<span class="line"><span>    # to have these messages end up in /var/log/haproxy.log you will</span></span>
<span class="line"><span>    # need to:</span></span>
<span class="line"><span>    #</span></span>
<span class="line"><span>    # 1) configure syslog to accept network log events.  This is done</span></span>
<span class="line"><span>    #    by adding the &#39;-r&#39; option to the SYSLOGD_OPTIONS in</span></span>
<span class="line"><span>    #    /etc/sysconfig/syslog</span></span>
<span class="line"><span>    #</span></span>
<span class="line"><span>    # 2) configure local2 events to go to the /var/log/haproxy.log</span></span>
<span class="line"><span>    #   file. A line like the following can be added to</span></span>
<span class="line"><span>    #   /etc/sysconfig/syslog</span></span>
<span class="line"><span>    #</span></span>
<span class="line"><span>    #    local2.*                       /var/log/haproxy.log</span></span>
<span class="line"><span>    #</span></span>
<span class="line"><span>    log         127.0.0.1 local2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    chroot      /var/lib/haproxy</span></span>
<span class="line"><span>    pidfile     /var/run/haproxy.pid</span></span>
<span class="line"><span>    maxconn     4000</span></span>
<span class="line"><span>    user        haproxy</span></span>
<span class="line"><span>    group       haproxy</span></span>
<span class="line"><span>    daemon</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    # turn on stats unix socket</span></span>
<span class="line"><span>    stats socket /var/lib/haproxy/stats</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    # utilize system-wide crypto-policies</span></span>
<span class="line"><span>    ssl-default-bind-ciphers PROFILE=SYSTEM</span></span>
<span class="line"><span>    ssl-default-server-ciphers PROFILE=SYSTEM</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span># common defaults that all the &#39;listen&#39; and &#39;backend&#39; sections will</span></span>
<span class="line"><span># use if not designated in their block</span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span>defaults</span></span>
<span class="line"><span>    mode                    http</span></span>
<span class="line"><span>    log                     global</span></span>
<span class="line"><span>    option                  httplog</span></span>
<span class="line"><span>    option                  dontlognull</span></span>
<span class="line"><span>    option http-server-close</span></span>
<span class="line"><span>    option forwardfor       except 127.0.0.0/8</span></span>
<span class="line"><span>    option                  redispatch</span></span>
<span class="line"><span>    retries                 3</span></span>
<span class="line"><span>    timeout http-request    10s</span></span>
<span class="line"><span>    timeout queue           1m</span></span>
<span class="line"><span>    timeout connect         10s</span></span>
<span class="line"><span>    timeout client          1m</span></span>
<span class="line"><span>    timeout server          1m</span></span>
<span class="line"><span>    timeout http-keep-alive 10s</span></span>
<span class="line"><span>    timeout check           10s</span></span>
<span class="line"><span>    maxconn                 3000</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span># main frontend which proxys to the backends</span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span>frontend apisever</span></span>
<span class="line"><span>    # 监听8443端口</span></span>
<span class="line"><span>    bind *:8443</span></span>
<span class="line"><span>    mode tcp</span></span>
<span class="line"><span>    option tcplog</span></span>
<span class="line"><span>    default_backend apiserver</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span># round robin balancing between the various backends</span></span>
<span class="line"><span>#---------------------------------------------------------------------</span></span>
<span class="line"><span>backend apiserver</span></span>
<span class="line"><span>    option httpchk GET /healthz</span></span>
<span class="line"><span>    http-check expect status 200</span></span>
<span class="line"><span>    mode tcp</span></span>
<span class="line"><span>    option ssl-hello-chk</span></span>
<span class="line"><span>    balance     roundrobin</span></span>
<span class="line"><span>        # apiserver节点</span></span>
<span class="line"><span>        server k8s-master01 172.25.2.4:6443 check</span></span>
<span class="line"><span>        server k8s-master02 172.25.2.5:6443 check</span></span>
<span class="line"><span>        server k8s-master03 172.25.2.6:6443 check</span></span>
<span class="line"><span>EOF</span></span></code></pre></div><blockquote><p>以上配置文件在master节点一致即可，不用额外修改</p></blockquote><h3 id="开启并开机自启" tabindex="-1">开启并开机自启 <a class="header-anchor" href="#开启并开机自启" aria-label="Permalink to &quot;开启并开机自启&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>systemctl enable keepalived --now</span></span>
<span class="line"><span>systemctl enable haproxy --now</span></span></code></pre></div><h3 id="验证vip漂移" tabindex="-1">验证vip漂移 <a class="header-anchor" href="#验证vip漂移" aria-label="Permalink to &quot;验证vip漂移&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>systemctl stop haproxy</span></span>
<span class="line"><span># 5秒后漂移到其他节点</span></span></code></pre></div>`,11),i=[l];function c(t,o,r,d,h,u){return a(),n("div",null,i)}const g=s(e,[["render",c]]);export{k as __pageData,g as default};
